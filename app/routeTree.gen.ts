/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TimeManagementImport } from './routes/time-management'
import { Route as TestTenderImport } from './routes/test-tender'
import { Route as TendersImport } from './routes/tenders'
import { Route as SuppliersImport } from './routes/suppliers'
import { Route as SolutionsImport } from './routes/solutions'
import { Route as SignupImport } from './routes/signup'
import { Route as ResourceCompassImport } from './routes/resource-compass'
import { Route as ProjectandconstructionImport } from './routes/projectandconstruction'
import { Route as LoginImport } from './routes/login'
import { Route as DealsImport } from './routes/deals'
import { Route as ContactImport } from './routes/contact'
import { Route as CategoriesImport } from './routes/categories'
import { Route as AppImport } from './routes/app'
import { Route as IndexImport } from './routes/index'
import { Route as SellerSellerIdImport } from './routes/seller.$sellerId'
import { Route as ProductProductIdImport } from './routes/product.$productId'

// Create/Update Routes

const TimeManagementRoute = TimeManagementImport.update({
  id: '/time-management',
  path: '/time-management',
  getParentRoute: () => rootRoute,
} as any)

const TestTenderRoute = TestTenderImport.update({
  id: '/test-tender',
  path: '/test-tender',
  getParentRoute: () => rootRoute,
} as any)

const TendersRoute = TendersImport.update({
  id: '/tenders',
  path: '/tenders',
  getParentRoute: () => rootRoute,
} as any)

const SuppliersRoute = SuppliersImport.update({
  id: '/suppliers',
  path: '/suppliers',
  getParentRoute: () => rootRoute,
} as any)

const SolutionsRoute = SolutionsImport.update({
  id: '/solutions',
  path: '/solutions',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ResourceCompassRoute = ResourceCompassImport.update({
  id: '/resource-compass',
  path: '/resource-compass',
  getParentRoute: () => rootRoute,
} as any)

const ProjectandconstructionRoute = ProjectandconstructionImport.update({
  id: '/projectandconstruction',
  path: '/projectandconstruction',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DealsRoute = DealsImport.update({
  id: '/deals',
  path: '/deals',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesRoute = CategoriesImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SellerSellerIdRoute = SellerSellerIdImport.update({
  id: '/seller/$sellerId',
  path: '/seller/$sellerId',
  getParentRoute: () => rootRoute,
} as any)

const ProductProductIdRoute = ProductProductIdImport.update({
  id: '/product/$productId',
  path: '/product/$productId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/categories': {
      id: '/categories'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/deals': {
      id: '/deals'
      path: '/deals'
      fullPath: '/deals'
      preLoaderRoute: typeof DealsImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/projectandconstruction': {
      id: '/projectandconstruction'
      path: '/projectandconstruction'
      fullPath: '/projectandconstruction'
      preLoaderRoute: typeof ProjectandconstructionImport
      parentRoute: typeof rootRoute
    }
    '/resource-compass': {
      id: '/resource-compass'
      path: '/resource-compass'
      fullPath: '/resource-compass'
      preLoaderRoute: typeof ResourceCompassImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/solutions': {
      id: '/solutions'
      path: '/solutions'
      fullPath: '/solutions'
      preLoaderRoute: typeof SolutionsImport
      parentRoute: typeof rootRoute
    }
    '/suppliers': {
      id: '/suppliers'
      path: '/suppliers'
      fullPath: '/suppliers'
      preLoaderRoute: typeof SuppliersImport
      parentRoute: typeof rootRoute
    }
    '/tenders': {
      id: '/tenders'
      path: '/tenders'
      fullPath: '/tenders'
      preLoaderRoute: typeof TendersImport
      parentRoute: typeof rootRoute
    }
    '/test-tender': {
      id: '/test-tender'
      path: '/test-tender'
      fullPath: '/test-tender'
      preLoaderRoute: typeof TestTenderImport
      parentRoute: typeof rootRoute
    }
    '/time-management': {
      id: '/time-management'
      path: '/time-management'
      fullPath: '/time-management'
      preLoaderRoute: typeof TimeManagementImport
      parentRoute: typeof rootRoute
    }
    '/product/$productId': {
      id: '/product/$productId'
      path: '/product/$productId'
      fullPath: '/product/$productId'
      preLoaderRoute: typeof ProductProductIdImport
      parentRoute: typeof rootRoute
    }
    '/seller/$sellerId': {
      id: '/seller/$sellerId'
      path: '/seller/$sellerId'
      fullPath: '/seller/$sellerId'
      preLoaderRoute: typeof SellerSellerIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRoute
  '/categories': typeof CategoriesRoute
  '/contact': typeof ContactRoute
  '/deals': typeof DealsRoute
  '/login': typeof LoginRoute
  '/projectandconstruction': typeof ProjectandconstructionRoute
  '/resource-compass': typeof ResourceCompassRoute
  '/signup': typeof SignupRoute
  '/solutions': typeof SolutionsRoute
  '/suppliers': typeof SuppliersRoute
  '/tenders': typeof TendersRoute
  '/test-tender': typeof TestTenderRoute
  '/time-management': typeof TimeManagementRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/seller/$sellerId': typeof SellerSellerIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppRoute
  '/categories': typeof CategoriesRoute
  '/contact': typeof ContactRoute
  '/deals': typeof DealsRoute
  '/login': typeof LoginRoute
  '/projectandconstruction': typeof ProjectandconstructionRoute
  '/resource-compass': typeof ResourceCompassRoute
  '/signup': typeof SignupRoute
  '/solutions': typeof SolutionsRoute
  '/suppliers': typeof SuppliersRoute
  '/tenders': typeof TendersRoute
  '/test-tender': typeof TestTenderRoute
  '/time-management': typeof TimeManagementRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/seller/$sellerId': typeof SellerSellerIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/app': typeof AppRoute
  '/categories': typeof CategoriesRoute
  '/contact': typeof ContactRoute
  '/deals': typeof DealsRoute
  '/login': typeof LoginRoute
  '/projectandconstruction': typeof ProjectandconstructionRoute
  '/resource-compass': typeof ResourceCompassRoute
  '/signup': typeof SignupRoute
  '/solutions': typeof SolutionsRoute
  '/suppliers': typeof SuppliersRoute
  '/tenders': typeof TendersRoute
  '/test-tender': typeof TestTenderRoute
  '/time-management': typeof TimeManagementRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/seller/$sellerId': typeof SellerSellerIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/categories'
    | '/contact'
    | '/deals'
    | '/login'
    | '/projectandconstruction'
    | '/resource-compass'
    | '/signup'
    | '/solutions'
    | '/suppliers'
    | '/tenders'
    | '/test-tender'
    | '/time-management'
    | '/product/$productId'
    | '/seller/$sellerId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/categories'
    | '/contact'
    | '/deals'
    | '/login'
    | '/projectandconstruction'
    | '/resource-compass'
    | '/signup'
    | '/solutions'
    | '/suppliers'
    | '/tenders'
    | '/test-tender'
    | '/time-management'
    | '/product/$productId'
    | '/seller/$sellerId'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/categories'
    | '/contact'
    | '/deals'
    | '/login'
    | '/projectandconstruction'
    | '/resource-compass'
    | '/signup'
    | '/solutions'
    | '/suppliers'
    | '/tenders'
    | '/test-tender'
    | '/time-management'
    | '/product/$productId'
    | '/seller/$sellerId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRoute
  CategoriesRoute: typeof CategoriesRoute
  ContactRoute: typeof ContactRoute
  DealsRoute: typeof DealsRoute
  LoginRoute: typeof LoginRoute
  ProjectandconstructionRoute: typeof ProjectandconstructionRoute
  ResourceCompassRoute: typeof ResourceCompassRoute
  SignupRoute: typeof SignupRoute
  SolutionsRoute: typeof SolutionsRoute
  SuppliersRoute: typeof SuppliersRoute
  TendersRoute: typeof TendersRoute
  TestTenderRoute: typeof TestTenderRoute
  TimeManagementRoute: typeof TimeManagementRoute
  ProductProductIdRoute: typeof ProductProductIdRoute
  SellerSellerIdRoute: typeof SellerSellerIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRoute,
  CategoriesRoute: CategoriesRoute,
  ContactRoute: ContactRoute,
  DealsRoute: DealsRoute,
  LoginRoute: LoginRoute,
  ProjectandconstructionRoute: ProjectandconstructionRoute,
  ResourceCompassRoute: ResourceCompassRoute,
  SignupRoute: SignupRoute,
  SolutionsRoute: SolutionsRoute,
  SuppliersRoute: SuppliersRoute,
  TendersRoute: TendersRoute,
  TestTenderRoute: TestTenderRoute,
  TimeManagementRoute: TimeManagementRoute,
  ProductProductIdRoute: ProductProductIdRoute,
  SellerSellerIdRoute: SellerSellerIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app",
        "/categories",
        "/contact",
        "/deals",
        "/login",
        "/projectandconstruction",
        "/resource-compass",
        "/signup",
        "/solutions",
        "/suppliers",
        "/tenders",
        "/test-tender",
        "/time-management",
        "/product/$productId",
        "/seller/$sellerId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/app": {
      "filePath": "app.tsx"
    },
    "/categories": {
      "filePath": "categories.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/deals": {
      "filePath": "deals.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/projectandconstruction": {
      "filePath": "projectandconstruction.tsx"
    },
    "/resource-compass": {
      "filePath": "resource-compass.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/solutions": {
      "filePath": "solutions.tsx"
    },
    "/suppliers": {
      "filePath": "suppliers.tsx"
    },
    "/tenders": {
      "filePath": "tenders.tsx"
    },
    "/test-tender": {
      "filePath": "test-tender.tsx"
    },
    "/time-management": {
      "filePath": "time-management.tsx"
    },
    "/product/$productId": {
      "filePath": "product.$productId.tsx"
    },
    "/seller/$sellerId": {
      "filePath": "seller.$sellerId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
